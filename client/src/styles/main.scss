:global {
    @import "./global.css";
    @import url("http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css");
  }
  
  // change the background color of the body
  html,
  body {
    margin: 0;
    padding: 0;
    height: 100vh;
    width: 100vw;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
      "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
      sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-family: "Roboto", sans-serif;
  }
  
  #root {
    margin: 0;
    padding: 0;
    height: 100vh;
    width: 100vw;
  }
  
  .inputGroup {
    background-color: rgba(120, 150, 200, 0.3);
    display: block;
    margin: 10px 0;
    position: relative;
    border-radius: 20px;
  
    label {
      padding: 12px 30px;
      width: 100%;
      display: block;
      text-align: left;
      color: rgb(255, 255, 255);
      cursor: pointer;
      position: relative;
      z-index: 2;
      transition: color 200ms ease-in;
      overflow: hidden;
  
      &:before {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        content: "";
        background-color: rgba(120, 150, 200, 0.3); //#5562eb;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%) scale3d(1, 1, 1);
        transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
        opacity: 0;
        z-index: -1;
      }
  
      &:after {
        width: 32px;
        height: 32px;
        content: "";
        border: 2px solid rgba(120, 150, 200, 0.5);
        background-color: rgba(120, 150, 200, 0.1);
        background-image: url("data:image/svg+xml,%3Csvg width='32' height='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M5.414 11L4 12.414l5.414 5.414L20.828 6.414 19.414 5l-10 10z' fill='%23bbb' fill-rule='nonzero'/%3E%3C/svg%3E ");
        background-repeat: no-repeat;
        background-position: 2px 3px;
        border-radius: 50%;
        z-index: 2;
        position: absolute;
        right: 30px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        transition: all 200ms ease-in;
      }
    }
  
    input:checked ~ label {
      color: #fff;
  
      &:before {
        transform: translate(-50%, -50%) scale3d(56, 56, 1);
        opacity: 1;
      }
  
      &:after {
        background-color: rgba(150, 200, 150, 0.5); //#54E0C7;
        border-color: rgba(120, 200, 150, 0.8); //#54E0C7;
      }
    }
  
    input ~ label {
      border-radius: 20px;
    }
  
    input {
      width: 32px;
      height: 32px;
      order: 1;
      z-index: 2;
      position: absolute;
      right: 30px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      visibility: hidden;
    }
  }
  
  // codepen formatting
  .form {
    padding: 0 16px;
    max-width: 550px;
    margin: 50px auto;
    font-size: 16px;
    font-weight: 400;
    line-height: 42px;
    zoom: 0.8;
  }
  
  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }
  
  html {
    box-sizing: border-box;
  }
  
  .title {
    color: rgb(150, 200, 150);
    text-align: center;
  }
  
  #radio5 {
    text-align: center;
  }
  
  .btn {
    --offset: 10px;
    --border-size: 2px;
  
    display: block;
    position: relative;
    padding: 1.5em 3em;
    appearance: none;
    border: 0;
    background: transparent;
    color: rgb(150, 200, 150);
    text-transform: uppercase;
    letter-spacing: 0.25em;
    outline: none;
    cursor: pointer;
    font-weight: bold;
    border-radius: 0;
    box-shadow: inset 0 0 0 var(--border-size) currentcolor;
    transition: background 0.8s ease;
  
    &:hover {
      background: rgba(100, 0, 0, 0.03);
    }
  
    &__horizontal,
    &__vertical {
      position: absolute;
      top: var(--horizontal-offset, 0);
      right: var(--vertical-offset, 0);
      bottom: var(--horizontal-offset, 0);
      left: var(--vertical-offset, 0);
      transition: transform 0.8s ease;
      will-change: transform;
  
      &::before {
        content: "";
        position: absolute;
        border: inherit;
      }
    }
  
    &__horizontal {
      --vertical-offset: calc(var(--offset) * -1);
      border-top: var(--border-size) solid currentcolor;
      border-bottom: var(--border-size) solid currentcolor;
  
      &::before {
        top: calc(var(--vertical-offset) - var(--border-size));
        bottom: calc(var(--vertical-offset) - var(--border-size));
        left: calc(var(--vertical-offset) * -1);
        right: calc(var(--vertical-offset) * -1);
      }
    }
  
    &:hover &__horizontal {
      transform: scaleX(0);
    }
  
    &__vertical {
      --horizontal-offset: calc(var(--offset) * -1);
      border-left: var(--border-size) solid currentcolor;
      border-right: var(--border-size) solid currentcolor;
  
      &::before {
        top: calc(var(--horizontal-offset) * -1);
        bottom: calc(var(--horizontal-offset) * -1);
        left: calc(var(--horizontal-offset) - var(--border-size));
        right: calc(var(--horizontal-offset) - var(--border-size));
      }
    }
  
    &:hover &__vertical {
      transform: scaleY(0);
    }
  }
  
  #button_vert_disabled {
    --offset: 10px;
    --border-size: 2px;
  
    display: block;
    position: relative;
    padding: 1.5em 3em;
    appearance: none;
    border: 0;
    background: transparent;
    color: grey;
    text-transform: uppercase;
    letter-spacing: 0.25em;
    outline: none;
    cursor: pointer;
    font-weight: bold;
    border-radius: 0;
    box-shadow: inset 0 0 0 var(--border-size) currentcolor;
    transition: background 0.8s ease;
  
    position: absolute;
      top: var(--horizontal-offset, 0);
      right: var(--vertical-offset, 0);
      bottom: var(--horizontal-offset, 0);
      left: var(--vertical-offset, 0);
      transition: transform 0.8s ease;
      will-change: transform;
  }